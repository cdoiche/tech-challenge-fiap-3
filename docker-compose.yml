# Usage:
# docker compose -f docker-compose.yml --profile services-all --profile otel-all --profile zabbix-all up --build
# docker compose -f docker-compose.yml --profile services-all --profile otel-all --profile zabbix-all down

services:
  fiap.api.create:
    build:
      context: ./Fiap.Api
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:5131
    ports:
      - 5131:5131
    networks:
      otel:
    profiles:
      - services-all
  
  fiap.api.update:
    build:
      context: ./Fiap.Api.Atualizarcontato
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ASPNETCORE_URLS=http://+:5132
    ports:
      - 5132:5132
    networks:
      otel:
    profiles:
      - services-all

  worker.consumer:
    build:
      context: .
      dockerfile: ./Fiap.Consumer/Dockerfile
    environment:
      - DOTNET_ENVIRONMENT=Development
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=desafio_1
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123!asd
    networks:
      - otel
    depends_on:
      rabbitmq:
        condition: service_healthy
    profiles:
      - services-all
  
  db:
    image: postgres:13
    hostname: db
    environment:
      POSTGRES_DB: desafio_1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123!asd
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      otel:
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - services-all

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"  # RabbitMQ main port
      - "15672:15672" # RabbitMQ Management UI
    networks:
      - otel
    profiles:
      - services-all
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 30s
      timeout: 10s
      retries: 5

  blackbox:
    image: prom/blackbox-exporter:v0.25.0
    container_name: blackbox
    restart: unless-stopped
    ports:
      - 9115:9115
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./.config/blackbox.yml:/etc/blackbox/blackbox.yml
    command: --config.file=/etc/blackbox/blackbox.yml
    networks:
      - otel
    profiles:
      - otel-all
     
  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./.config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    depends_on:
      blackbox:
        condition: "service_started"
        required: false
    networks:
      - otel
    profiles:
      - otel-all
      - otel-no-monitoring 
      
  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
      - PASSWORD=zabbix
      - DS_ZABBIX=zabbix
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./.config/grafana/provisioning:/etc/grafana/provisioning #https://grafana.com/docs/grafana/latest/administration/provisioning/
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    user: root
    ports:
      - 3001:3000
    depends_on:
      - prometheus
    networks:
      otel:
    profiles:
      - otel-all
      - otel-no-monitoring
      
  otel-collector:
    container_name: otel
    hostname: otel
    image: otel/opentelemetry-collector-contrib:0.103.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./.config/otel-collector-config.yml:/etc/otel-collector-config.yaml
    restart: unless-stopped
    ports:
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "4317:4317"   # OTLP gRPC receiver
      - "9200:55679"  # zpages
    networks:
      otel:
    profiles:
      - otel-all
      - otel-no-monitoring
  
  mysql:
    image: mysql:latest
    hostname: mysql
    container_name: mysql
    command: --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      TZ: America/Sao_Paulo
      MYSQL_DATABASE: "zabbix"
      MYSQL_USER: "zabbix"
      MYSQL_PASSWORD: "zabbix_pwd"
      MYSQL_ROOT_PASSWORD: "root_pwd"     
    networks:
      otel:
    volumes:
     - mysql_data:/var/lib/mysql
     - /etc/localtime:/etc/localtime:ro
    restart: always
    profiles:
      - zabbix-all

  zabbix-agent:
    container_name: zabbix-agent
    image: zabbix/zabbix-agent2:alpine-5.0.1
    user: root
    networks:
      otel:
    restart: always
    privileged: true
    ports:
      - 10050:10050
    environment:
      - ZBX_SERVER_HOST=zabbix
      - ZBX_HOSTNAME=zabbix-agent
      - ZBX_PASSIVE_ALLOW=true
      - ZBX_PASSIVESERVERS=zabbix
    profiles:
      - zabbix-all

  zabbix:
    image: zabbix/zabbix-server-mysql:latest
    hostname: zabbix
    container_name: zabbix
    depends_on:
     - mysql
     - zabbix-agent
    environment:
      TZ: America/Sao_Paulo
      DB_SERVER_HOST: "mysql"
      MYSQL_DATABASE: "zabbix"
      MYSQL_USER: "zabbix"
      MYSQL_PASSWORD: "zabbix_pwd"
      MYSQL_ROOT_PASSWORD: "root_pwd"
    ports:
     - 10051:10051
    volumes:
     - /etc/localtime:/etc/localtime:ro
    links:
     - mysql:mysql
     - zabbix-agent:zabbix-agent
    user: root
    networks:
      otel:
    restart: always
    profiles:
      - zabbix-all

  zabbix-web:
    image: zabbix/zabbix-web-apache-mysql:latest
    hostname: zabbix-web
    container_name: zabbix-web
    networks:
      otel:
    links:
      - zabbix
      - mysql
    restart: always
    ports:
      - 80:8080
      - 443:8443
    environment:
      DB_SERVER_HOST: "mysql"
      MYSQL_DATABASE: "zabbix"
      MYSQL_USER: "zabbix"
      MYSQL_PASSWORD: "zabbix_pwd"
      ZBX_SERVER_HOST: "zabbix"
      PHP_TZ: America/Sao_Paulo
    depends_on:
      - zabbix
      - mysql
    profiles:
      - zabbix-all  

networks:
  otel:

volumes:
  prometheus:
  grafana-data:
  postgres_data:
  mysql_data: